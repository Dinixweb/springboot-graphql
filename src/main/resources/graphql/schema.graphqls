type  Query{
    students:[Students]
    studentById(id:ID!):Students
    guardian:[Guardian]
    subjects:[Subjects]
}

type Mutation {
    addStudent(student:StudentInput!,guardian:GuardianInput!):Students!
    updateStudent(studentId:ID!, student:StudentInput!):UpdateMessage
    deleteStudent(studentId:ID!):DeleteMessage
}
type DeleteMessage{
    success:Boolean
    error:String
    studentId:String
    message:String
}
type UpdateMessage{
    studentId:ID
    success:Boolean
    error:String
}

input UpdateStudentInput{
    firstName:String
    lastName:String
    grade:String
}

input StudentInput{
    studentId:ID!
    firstName:String!
    lastName:String!
    grade:String!
}

input GuardianInput {
    guardianId:ID!
    firstName:String!
    lastName:String!
    email:String!
    studentId:ID!
}
type Students{
    studentId:ID
    firstName:String!
    lastName:String!
    grade:String!
    subjects:[Subjects]
    guardian:Guardian
}

type Guardian {
    guardianId:ID!
    firstName:String!
    lastName:String!
    email:String!
    studentId:ID!
}

type Subjects {
    subjectId:ID!
    subjectName:String!
    subjectTeacher:String!
    studentId:ID!
}
